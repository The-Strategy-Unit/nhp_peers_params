---
title: "`r params$selected_peer` - Activity Avoidance"
format:
  html: 
    self-contained: true
editor: visual
params:
  selected_peer: "RCX"
number-sections: true
number-depth: 3
toc: true
toc-depth: 3
toc-expand: false
---

This report displays the Activity Avoidance parameter values selected by schemes in the Inputs App. In order to identify your scheme, the Midpoint value for `r params$selected_peer` will be highlighted throughout this report in red.

Each graph contains the High and Low values that were inputted into the model for each scheme.

The Midpoint value has been calculated from the High and Low values that the scheme inputted.

Each graph also shows a mean average of the High, Low and Midpoint values across all of the schemes.\
\
The graphs also display the NEE recommended High and Low values.

```{r, echo = F, warning = F, results = "asis"}
# Paths are relative to where the template is knitted from, i.e. templates/

source("../R/plot_activity_mitigator_fun.R")

all_schemes <- readRDS("../outputs/processed-data/all_peers.rds")

df <- readRDS("../outputs/processed-data/plot_data.rds") |>
  dplyr::mutate(
    highlighted_scheme = params$selected_peer,
    all_schemes = list(all_schemes)
  )
  
for (a in unique(df$activity_type)) {
  df_a <- df |> dplyr::filter(activity_type == a)
  cat("## ", a, "\n")

  for (b in unique(df_a$strategy)) {
    df_b <- df_a |> dplyr::filter(strategy == b)
    cat("###", b, "\n")

    for (c in unique(df_b$time_profile)) {
      df_c <- df_b |> dplyr::filter(time_profile == c)
      cat("####", c, "\n")

      #  for(d in unique(df_c$time_profile)){
      #   df_d <- df_c |>  dplyr::filter(time_profile == d)
      #  cat("#####", d, "\n")

      for (d in 1:nrow(df_c)) {
        df_c |> purrr::pmap(make_activity_mitigator_graphs)
        # }
      }
    }
  }
}
```
